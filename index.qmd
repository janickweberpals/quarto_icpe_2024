---
title: "Reproducible reporting"
subtitle: "An introduction to Quarto"
date: "August 25, 2024"
date-format: long 
format:
  revealjs: 
    theme: custom.scss
    logo: logo.png
    footer: Quarto - An introduction to literate programming
    incremental: false 
    width: 1280
    height: 720
    transition: fade
  # pdf: 
  #   classoption: landscape
  #   fontsize: 18pt
  #   colorlinks: true
code-summary: "Show code"
code-line-numbers: true

toc: true
toc-depth: 1
slide-number: true
embed-resources: true
bibliography: references.bib
---

# Problem statement

> *Wait, but how was that done exactly?*

## Problem statement (i) {.incremental}

> *Wait, but how was that done exactly?*

::: incremental
-   More often than not, statistical and computational methods are reported and phrased ambiguously, e.g.,

    > *"We measured the pre-exposure performance status within 90 days of the index date."*

-   Does the 90-day window include or exclude the index date? What was done if there were multiple performance assessments per patient? ...

-   Take a moment and reflect if you would be able to exactly reproduce a study you published 10 years just based on the paper's methods section?
:::

## Problem statement (ii) {.incremental}

> *Wait, but how was that done exactly?*

One could find the details in the analytical programming code, BUT...

![](images/messy_code.jpg){fig-align="center" width="722"}

## Is there a reproducibility crisis?

[Nature survey](https://www.nature.com/articles/533452a#change-history): More than 70% of researchers have tried and failed to reproduce another scientist's experiments, and more than half have failed to reproduce their own experiments [@Baker2016]

![](images/nature_reproducibility_crisis.jpg){fig-align="center"}

## What if...

::: {.callout-important icon="false"}
## What if...

If there was just a way to combine...

-   the narrative prose that explains the methods used

-   the analytic code we implemented to execute these methods

-   the corresponding results

...all in one report?
:::

# Literate programming

> *Instead of imagining that our main task is to instruct a computer what to do, let us concentrate rather on explaining to human beings what we want a computer to do (*[Donald Knuth](#0), Turing Award recipient)

## Definition {.incremental}

It is basically an annotated, executable manuscript!

::: callout-tip
## Literate programming

[Programming paradigm](https://en.wikipedia.org/wiki/Programming_paradigm "Programming paradigm") introduced in 1984 by [Donald Knuth](https://en.wikipedia.org/wiki/Donald_Knuth "Donald Knuth") in which a [computer program](https://en.wikipedia.org/wiki/Computer_program "Computer program") is given as an explanation of how it works in a [natural language](https://en.wikipedia.org/wiki/Natural_language "Natural language"), such as English, interspersed (embedded) with [snippets](https://en.wikipedia.org/wiki/Snippet_(programming) "Snippet (programming)") of [macros](https://en.wikipedia.org/wiki/Macro_(computer_science) "Macro (computer science)") and traditional [source code](https://en.wikipedia.org/wiki/Source_code "Source code"), from which [compilable](https://en.wikipedia.org/wiki/Compiler "Compiler") source code can be generated.

[@knuth1984literate]
:::

In other words...

$$
\text{Literate programming} = \text{Documentation + Source Code + Output/Results} 
$$

## Example {.incremental}

::: callout-note
## Methods section text:

*"A propensity score model for exposure initiation was fit using logistic regression with age, sex and smoking as covariates. Patients were matched using nearest neighbor matching on the propensity score in a 1:1 ratio without replacement targeting the average treatment effect among the treated (ATT)."*
:::

```{r}
#| echo: true
#| code-fold: false
MatchIt::matchit(
  formula = exposure ~ age_num + female_cat + smoking_cat,
  data = smdi::smdi_data,
  ratio = 1,
  method = "nearest",
  distance = "glm",
  link = "logit",
  estimand = "ATT",
  replace = F
  )
```

## History of literate programming

-   [Literate programming](https://en.wikipedia.org/wiki/Literate_programming) is a concept pioneered by [Donald Knuth](#0), a Turing Award recipient known for creating [TeX](#0).

-   The main idea behind the early form of literate programming was to upend the traditional programming practices of the time by systematically including human readable text accompanying and explaining the logic and the purpose of a program.

-   As he describes in [“Literate Programming”](https://www-cs-faculty.stanford.edu/~knuth/lp.html), Knuth considers the programmer as an “essayist” who should strive to communicate the purpose of a program in order to create better code.

-   While initially centered in the domain of computer science, it more recently resurged in the interdisciplinary world of “data science”.

<https://bernhardbieri.ch/blog/2022-08-25-litteralprogramminginstata/>

## Popular legacy frameworks - RMarkdown

-   `R`Markdown is a powerful open-source tool for combining analysis and reporting into the same document

-   Can be used with few programming languages, but mostly focused on `R` programming language

[![Diagram illustrating how an RMarkdown document is converted to the final output document.](images/RMarkdown_workflow.png){width="882"}](https://bookdown.org/yihui/rmarkdown-cookbook/rmarkdown-process.html)

## Popular legacy frameworks - RMarkdown

![Example of an RMarkdown report and the corresponding output](images/RMarkdown_example.png){fig-align="center"}

## Popular legacy frameworks - Jupyter

-   [Project Jupyter](https://jupyter.org/about) is a non-profit, open-source project, born out of the [IPython Project](https://ipython.org/) in 2014 as it evolved to support interactive data science and scientific computing across all programming languages

-   Most often seen to be used by Python programmers

[![Illustration of Jupyter notebook workflow.](images/ipynb-how-it-works.png){fig-align="center"}](https://jjallaire.quarto.pub/intro-to-quarto/#/jupyter-engine)

## Popular legacy frameworks - Jupyter

[![Example of a Jupyter Notebook report and the corresponding output](images/jupyterlab-preview.png){fig-align="center"}](https://quarto.org/docs/tools/jupyter-lab.html)

## Document complexity of technical report

> *Strengths and weaknesses of technical reporting systems*

![](images/complexity_typesetting.png){fig-align="center"}

## Goal: single source publishing

[![From raw code and text to an elegant research report using Quarto](images/qmd-workflow.png)](https://openscapes.github.io/quarto-website-tutorial/quarto-workflows/)

## Introduction to Quarto

-   An open-source scientific and technical publishing system

[![Side-by-side example of a Quarto document (left) and a render .html output](images/quarto-hello.png)](https://quarto.org/docs/get-started/hello/rstudio.html)

## Introduction to Quarto

-   Unifies the functionality of many tools, packages and open source platforms into a single consistent system

-   Extends it with native support for a large number of open-source programming languages (R, Python, Julia, Stan, C++, etc.)

-   Can be used with most common code editors (RStudio, Jupyter, VSCode, etc.)

-   Proprietary programming languages (SAS, STATA) can also be integrated but require some additional setup

    -   Additional resources for use of Quarto with [SAS](https://sassoftware.github.io/saspy/configuration.html#http) ([setup](https://www.harveyl888.com/outputs/quarto_02.html), [demo](https://www.harveyl888.com/outputs/quarto_02.html)) and [STATA](https://users.ssc.wisc.edu/~hemken/Stataworkshops/Statamarkdown/stata-and-r-markdown.html) can be found on the course website

## Quarto - ingredients for a research report

-   First we provide **metadata** about the project in a so called YAML header (Yet Another Markdown Language)
-   Documentation on all YAML options can be found on <https://quarto.org/docs/reference/>

``` yaml
---
title: "My RWE study report"
author: "Janick Weberpals"
date: last-modified
toc: true
code-fold: true
number-sections: true
bibliography: references.bib
csl: pharmacoepidemiology-and-drug-safety.csl
format: 
  html: default
  docx: default
  pdf: default
---
```

## Quarto - ingredients for a research report

::: columns
::: {.column width="50%"}
**Plain text**

-   To describe objectives, methods (just like in a .docx document)

-   Achieved via Markdown syntax

-   ✅ Universal and reproducible formatting across output document types

-   ❌ Syntax needs to be known (although many modern editors come with a GUI)
:::

::: {.column width="50%"}
[![](images/markdown.png){width="600"}](https://www.rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf)
:::
:::

## Quarto - ingredients for a research report

-   Code chunks make it possible to blend plain text, programming code and the corresponding output, e.g.,

    | The propensity score was defined as the probability of each patient to initiate the exposure based on observed baseline covariates including age, sex and smoking.

```{r}
#| label: example-ps-fit
#| echo: true

library(smdi)
library(dplyr)

# define the model fit
ps_fit <- as.formula(exposure ~ age_num + female_cat + smoking_cat)
ps_fit

# perform logistic regression
exposure_fit <- glm(
  ps_fit,
  data = smdi_data,
  family = "binomial"
  )

# store propensity scores
smdi_data <- smdi_data |> 
   mutate(ps = fitted(exposure_fit))
```

## Quarto-based research reports {visibility="hidden"}

<iframe src="https://drugepi.gitlab-pages.partners.org/hdmi-manuscript/" width="1920" height="1080" title="HDMI research report">

</iframe>

## Quarto-based research reports

[![\[Example research report\](https://drugepi.gitlab-pages.partners.org/hdmi-manuscript/) created using Quarto](images/hdmi_example.png){fig-align="center"}](https://drugepi.gitlab-pages.partners.org/hdmi-manuscript/)

## YAML file

...

## Text formatting

...

## Equations

...

## Code execution

...

## Examples

...

## Parameterized reporting

...

## Reproducible projects and manuscripts

...

## **Further resources**

-   [Introduction to Quarto (R for Data Science)](https://r4ds.hadley.nz/quarto)

-   [Basic Quarto workflows](https://openscapes.github.io/quarto-website-tutorial/quarto-workflows/)

-   

## References
